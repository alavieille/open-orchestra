<?xml version="1.0" encoding="UTF-8"?>
<!-- Continuous integration build.xml -->
<project name="php-orchestra" default="build" basedir="../..">

    <!-- Properties -->
    <property name="appli.src.project.path" value="src/symfony2" />

    <!-- Default target: build -->
    <target name="build" depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit,phpcb,phpdoc" />

    <!-- Cleanup task -->
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/code-browser" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
    </target>

    <!-- Create build results directories -->
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/code-browser" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
    </target>

    <!-- Check PHP files syntax -->
    <target name="lint">
        <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="find -L ${basedir}/${appli.src.project.path}/src ${basedir}/${appli.src.project.path}/vendor/php-orchestra -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l" />
        </exec>
    </target>

    <!-- Project size stats -->
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
        </exec>
    </target>

    <!-- PHP Depend -->
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
        </exec>
    </target>

    <!-- PHP Mess Detector -->
    <target name="phpmd" description="Perform project mess detection using PHPMD" unless="appli.disable.phpmd">
        <exec executable="phpmd">
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra,${basedir}/${appli.src.project.path}/src" />
            <arg value="text" />
            <arg value="${basedir}/build/jenkins/phpmd.xml" />
            <arg value="--exclude" />
            <arg value="Base" />
        </exec>
    </target>

    <!-- PHP Mess Detector for CI (generate report file) -->
    <target name="phpmd-ci" description="Perform project mess detection using PHPMD" unless="appli.disable.phpmd">
        <exec executable="phpmd">
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra,${basedir}/${appli.src.project.path}/src" />
            <arg value="xml" />
            <arg value="${basedir}/build/jenkins/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="Base" />
        </exec>
    </target>

    <!-- Code Sniffer -->
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer" unless="appli.disable.phpcs">
        <exec executable="phpcs">
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
            <arg path="${basedir}/${appli.src.project.path}/src" />
        </exec>
    </target>

    <!-- Code Sniffer for CI (generate report file) -->
    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer" unless="appli.disable.phpcs">
        <exec executable="phpcs">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
            <arg path="${basedir}/${appli.src.project.path}/src" />
        </exec>
    </target>

    <!-- PHP Copy Paste Detector -->
    <target name="phpcpd" description="Find duplicate code using PHPCPD" unless="appli.disable.phpcpd">
        <exec executable="${basedir}/${appli.src.project.path}/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="Base" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
            <arg path="${basedir}/${appli.src.project.path}/src" />
        </exec>
    </target>

    <!-- PHP Unit -->
    <target name="phpunit" description="Run unit tests with PHPUnit" unless="appli.disable.phpunit">
        <exec executable="${basedir}/${appli.src.project.path}/bin/phpunit" failonerror="false">
            <arg value="--configuration" />
            <arg path="build/jenkins/phpunit.xml" />
        </exec>
    </target>

    <!-- PHP Code Browser -->
    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <!-- PHP Documentor -->
    <target name="phpdoc" description="Generate API documentation using PHPDocumentor" unless="appli.disable.phpdoc">
        <exec executable="${basedir}/${appli.src.project.path}/bin/phpdoc.php">
            <arg value="--extensions=php" />
            <arg value="--directory" />
            <arg path="${basedir}/${appli.src.project.path}/vendor/php-orchestra" />
            <arg value="--target" />
            <arg path="${basedir}/build/api" />
        </exec>
    </target>
</project>
